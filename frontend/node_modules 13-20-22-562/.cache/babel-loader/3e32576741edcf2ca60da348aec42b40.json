{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMedia = exports.getMediaShorthands = exports.getMixin = exports.mediaRules = exports.getNextMedia = exports.getSmallestMedia = exports.mediaTemplate = exports.ruleTemplate = exports.mediaWidthRule = exports.defaultBreakpoints = void 0;\n\nconst styled_components_1 = require(\"styled-components\");\n\nexports.defaultBreakpoints = {\n  xxs: 0,\n  xs: 320,\n  s: 576,\n  m: 768,\n  l: 992,\n  xl: 1200\n}; // Breakpoint\n\nconst mediaWidthRule = rule => `${{\n  minWidth: 'min',\n  maxWidth: 'max'\n}[rule] || 'min'}-width`;\n\nexports.mediaWidthRule = mediaWidthRule;\n\nconst ruleTemplate = (rule, width) => `(${rule}: ${width}px)`;\n\nexports.ruleTemplate = ruleTemplate;\n\nconst mediaTemplate = rules => `@media only screen and ${rules}`;\n\nexports.mediaTemplate = mediaTemplate;\n\nconst getSmallestMedia = breakpoints => {\n  const keys = Object.keys(breakpoints);\n  return Number(keys.reduce((acc, key) => {\n    if (acc) {\n      return acc > breakpoints[key] ? breakpoints[key] : acc;\n    }\n\n    return breakpoints[key];\n  }, undefined));\n};\n\nexports.getSmallestMedia = getSmallestMedia;\n\nconst getNextMedia = (breakpoints, width) => {\n  const keys = Object.keys(breakpoints);\n  const nextBreakpoint = Number(keys.reduce((acc, key) => {\n    const current = breakpoints[key];\n\n    if (acc && width - current <= 0) {\n      return width - acc > Math.abs(width - current) || width - acc === 0 ? current : acc;\n    }\n\n    return (0, exports.getSmallestMedia)(breakpoints);\n  }, undefined));\n\n  if (nextBreakpoint === width) {\n    throw new Error(`The breakpoint of value ${nextBreakpoint} is the heighst there is, did you mean to use \"[media].minWidth\"?`);\n  }\n\n  return nextBreakpoint;\n};\n\nexports.getNextMedia = getNextMedia;\n\nconst mediaRules = (breakpoints, widthKey, rule, boundKey) => {\n  const width = breakpoints[widthKey];\n  const bound = breakpoints[boundKey];\n  let baseWidthRule = (0, exports.mediaWidthRule)(rule);\n  let boudWidthRule;\n  let baseRule = (0, exports.ruleTemplate)(baseWidthRule, width);\n  let boundRule;\n\n  if (bound && width) {\n    // Get correct rule based on width relative to bound\n    baseWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth');\n    boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n    baseRule = (0, exports.ruleTemplate)((0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth'), width);\n    boundRule = (0, exports.ruleTemplate)(boudWidthRule, bound);\n    return [].concat([baseRule], bound ? [boundRule] : []).join(' and ');\n  }\n\n  if (!bound && rule === 'only') {\n    // Get correct rule based on width relative to bound\n    boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n    boundRule = (0, exports.ruleTemplate)(boudWidthRule, (0, exports.getNextMedia)(breakpoints, width));\n  }\n\n  return [].concat([baseRule], boundRule ? [boundRule] : []).join(' and ');\n};\n\nexports.mediaRules = mediaRules;\n\nconst getMixin = function (breakpoints, key) {\n  let rule = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'minWidth';\n  return bound => function () {\n    return (0, styled_components_1.css)`\n      ${(0, exports.mediaTemplate)((0, exports.mediaRules)(breakpoints, key, rule, bound))}{\n        ${(0, styled_components_1.css)(...arguments)}\n      }\n    `;\n  };\n};\n\nexports.getMixin = getMixin;\n\nconst getMediaShorthands = (breakpoints, rule) => Object.keys(breakpoints).reduce((acc, key) => ({ ...acc,\n  [key]: (0, exports.getMixin)(breakpoints, key, rule)()\n}), {});\n\nexports.getMediaShorthands = getMediaShorthands;\n\nconst getMedia = breakpoints => {\n  const mediasUp = (0, exports.getMediaShorthands)(breakpoints, 'minWidth');\n  const list = Object.keys(breakpoints);\n  return { ...mediasUp,\n    minWidth: widthKey => (0, exports.getMixin)(breakpoints, widthKey, 'minWidth')(),\n    maxWidth: widthKey => (0, exports.getMixin)(breakpoints, widthKey, 'maxWidth')(),\n    only: (widthKey, boundKey) => (0, exports.getMixin)(breakpoints, widthKey, 'only')(boundKey),\n    list\n  };\n};\n\nexports.getMedia = getMedia;\nexports.default = exports.getMedia;","map":{"version":3,"sources":["/Users/gilbertvirgo/chl-v2/frontend/node_modules/styled-components-breakpoints/dist/index.js"],"names":["Object","defineProperty","exports","value","getMedia","getMediaShorthands","getMixin","mediaRules","getNextMedia","getSmallestMedia","mediaTemplate","ruleTemplate","mediaWidthRule","defaultBreakpoints","styled_components_1","require","xxs","xs","s","m","l","xl","rule","minWidth","maxWidth","width","rules","breakpoints","keys","Number","reduce","acc","key","undefined","nextBreakpoint","current","Math","abs","Error","widthKey","boundKey","bound","baseWidthRule","boudWidthRule","baseRule","boundRule","concat","join","css","mediasUp","list","only","default"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMedia = exports.getMediaShorthands = exports.getMixin = exports.mediaRules = exports.getNextMedia = exports.getSmallestMedia = exports.mediaTemplate = exports.ruleTemplate = exports.mediaWidthRule = exports.defaultBreakpoints = void 0;\nconst styled_components_1 = require(\"styled-components\");\nexports.defaultBreakpoints = {\n    xxs: 0,\n    xs: 320,\n    s: 576,\n    m: 768,\n    l: 992,\n    xl: 1200,\n};\n// Breakpoint\nconst mediaWidthRule = (rule) => (`${{ minWidth: 'min', maxWidth: 'max' }[rule] || 'min'}-width`);\nexports.mediaWidthRule = mediaWidthRule;\nconst ruleTemplate = (rule, width) => `(${rule}: ${width}px)`;\nexports.ruleTemplate = ruleTemplate;\nconst mediaTemplate = (rules) => (`@media only screen and ${rules}`);\nexports.mediaTemplate = mediaTemplate;\nconst getSmallestMedia = (breakpoints) => {\n    const keys = Object.keys(breakpoints);\n    return (Number(keys.reduce((acc, key) => {\n        if (acc) {\n            return acc > breakpoints[key] ? breakpoints[key] : acc;\n        }\n        return breakpoints[key];\n    }, undefined)));\n};\nexports.getSmallestMedia = getSmallestMedia;\nconst getNextMedia = (breakpoints, width) => {\n    const keys = Object.keys(breakpoints);\n    const nextBreakpoint = Number(keys.reduce((acc, key) => {\n        const current = breakpoints[key];\n        if (acc && width - current <= 0) {\n            return width - acc > Math.abs(width - current) || width - acc === 0 ? current : acc;\n        }\n        return (0, exports.getSmallestMedia)(breakpoints);\n    }, undefined));\n    if (nextBreakpoint === width) {\n        throw new Error(`The breakpoint of value ${nextBreakpoint} is the heighst there is, did you mean to use \"[media].minWidth\"?`);\n    }\n    return nextBreakpoint;\n};\nexports.getNextMedia = getNextMedia;\nconst mediaRules = (breakpoints, widthKey, rule, boundKey) => {\n    const width = breakpoints[widthKey];\n    const bound = breakpoints[boundKey];\n    let baseWidthRule = (0, exports.mediaWidthRule)(rule);\n    let boudWidthRule;\n    let baseRule = (0, exports.ruleTemplate)(baseWidthRule, width);\n    let boundRule;\n    if (bound && width) {\n        // Get correct rule based on width relative to bound\n        baseWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth');\n        boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n        baseRule = (0, exports.ruleTemplate)((0, exports.mediaWidthRule)(bound <= width ? 'maxWidth' : 'minWidth'), width);\n        boundRule = (0, exports.ruleTemplate)(boudWidthRule, bound);\n        return [].concat([baseRule], bound ? [boundRule] : []).join(' and ');\n    }\n    if (!bound && rule === 'only') {\n        // Get correct rule based on width relative to bound\n        boudWidthRule = (0, exports.mediaWidthRule)(bound <= width ? 'minWidth' : 'maxWidth');\n        boundRule = (0, exports.ruleTemplate)(boudWidthRule, (0, exports.getNextMedia)(breakpoints, width));\n    }\n    return [].concat([baseRule], boundRule ? [boundRule] : []).join(' and ');\n};\nexports.mediaRules = mediaRules;\nconst getMixin = (breakpoints, key, rule = 'minWidth') => (bound) => ((...args) => (0, styled_components_1.css) `\n      ${(0, exports.mediaTemplate)((0, exports.mediaRules)(breakpoints, key, rule, bound))}{\n        ${(0, styled_components_1.css)(...args)}\n      }\n    `);\nexports.getMixin = getMixin;\nconst getMediaShorthands = (breakpoints, rule) => (Object.keys(breakpoints).reduce((acc, key) => ({\n    ...acc,\n    [key]: (0, exports.getMixin)(breakpoints, key, rule)(),\n}), {}));\nexports.getMediaShorthands = getMediaShorthands;\nconst getMedia = (breakpoints) => {\n    const mediasUp = (0, exports.getMediaShorthands)(breakpoints, 'minWidth');\n    const list = Object.keys(breakpoints);\n    return ({\n        ...mediasUp,\n        minWidth: (widthKey) => (0, exports.getMixin)(breakpoints, widthKey, 'minWidth')(),\n        maxWidth: (widthKey) => (0, exports.getMixin)(breakpoints, widthKey, 'maxWidth')(),\n        only: (widthKey, boundKey) => (0, exports.getMixin)(breakpoints, widthKey, 'only')(boundKey),\n        list,\n    });\n};\nexports.getMedia = getMedia;\nexports.default = exports.getMedia;\n"]},"metadata":{},"sourceType":"script"}