{"ast":null,"code":"var _jsxFileName = \"/Users/gilbertvirgo/chl-v2/frontend/src/components/Button/index.js\",\n    _s = $RefreshSig$();\n\nimport { ButtonTemplate, ButtonWrapper, DropdownLeaf, Icon } from \"./styles\";\nimport { Paragraph } from \"../Text\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n\n  let {\n    center,\n    dropdown,\n    options,\n    external,\n    children,\n    href,\n    ...props\n  } = _ref;\n  const [active, setActive] = React.useState(false);\n  const ref = React.useRef(Math.floor(Math.random() * 99999));\n\n  const deactivate = function (event) {\n    console.log(\"EVENT\", event);\n    const {\n      target\n    } = event;\n    console.log([target.dataset.ref, ref.current]);\n\n    if (target.dataset.ref != ref.current) {\n      setActive(false);\n      window.removeEventListener(\"pointerDown\", this);\n    }\n  };\n\n  const handleClick = async () => {\n    if (active) {\n      setActive(false);\n    } else {\n      window.addEventListener(\"pointerDown\", deactivate);\n      setActive(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n    center: center,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      href: href,\n      children: /*#__PURE__*/_jsxDEV(ButtonTemplate, {\n        \"data-ref\": ref.current,\n        ...props,\n        onPointerDown: handleClick,\n        children: [external && /*#__PURE__*/_jsxDEV(Icon.External, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), children, \" \", dropdown && /*#__PURE__*/_jsxDEV(Icon.Chevron, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), dropdown && /*#__PURE__*/_jsxDEV(DropdownLeaf, {\n      \"data-ref\": ref.current,\n      active: active,\n      children: options.items.map(_ref2 => {\n        let {\n          value,\n          href\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Paragraph, {\n          as: \"li\",\n          children: href ? /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: href,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this) : value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}, \"LHj1NJpnvLkubm9MtwhA3jcvlx8=\");","map":{"version":3,"sources":["/Users/gilbertvirgo/chl-v2/frontend/src/components/Button/index.js"],"names":["ButtonTemplate","ButtonWrapper","DropdownLeaf","Icon","Paragraph","React","center","dropdown","options","external","children","href","props","active","setActive","useState","ref","useRef","Math","floor","random","deactivate","event","console","log","target","dataset","current","window","removeEventListener","handleClick","addEventListener","items","map","value"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,aAAzB,EAAwCC,YAAxC,EAAsDC,IAAtD,QAAkE,UAAlE;AAEA,SAASC,SAAT,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,kBAAe,QAQT;AAAA;;AAAA,MARU;AACfC,IAAAA,MADe;AAEfC,IAAAA,QAFe;AAGfC,IAAAA,OAHe;AAIfC,IAAAA,QAJe;AAKfC,IAAAA,QALe;AAMfC,IAAAA,IANe;AAOf,OAAGC;AAPY,GAQV;AACL,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAA5B;AAEA,QAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CAAb,CAAZ;;AAEA,QAAMC,UAAU,GAAG,UAAUC,KAAV,EAAiB;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAaH,KAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,MAAM,CAACC,OAAP,CAAeV,GAAhB,EAAqBA,GAAG,CAACW,OAAzB,CAAZ;;AAEA,QAAIF,MAAM,CAACC,OAAP,CAAeV,GAAf,IAAsBA,GAAG,CAACW,OAA9B,EAAuC;AACtCb,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAc,MAAAA,MAAM,CAACC,mBAAP,CAA2B,aAA3B,EAA0C,IAA1C;AACA;AACD,GAXD;;AAaA,QAAMC,WAAW,GAAG,YAAY;AAC/B,QAAIjB,MAAJ,EAAY;AACXC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACA,KAFD,MAEO;AACNc,MAAAA,MAAM,CAACG,gBAAP,CAAwB,aAAxB,EAAuCV,UAAvC;AACAP,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA;AACD,GAPD;;AASA,sBACC,QAAC,aAAD;AAAe,IAAA,MAAM,EAAER,MAAvB;AAAA,4BACC;AAAG,MAAA,MAAM,EAAC,QAAV;AAAmB,MAAA,IAAI,EAAEK,IAAzB;AAAA,6BACC,QAAC,cAAD;AACC,oBAAUK,GAAG,CAACW,OADf;AAAA,WAEKf,KAFL;AAGC,QAAA,aAAa,EAAEkB,WAHhB;AAAA,mBAKErB,QAAQ,iBAAI,QAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA,gBALd,EAMEC,QANF,OAMaH,QAAQ,iBAAI,QAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA,gBANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,EAWEA,QAAQ,iBACR,QAAC,YAAD;AAAc,kBAAUS,GAAG,CAACW,OAA5B;AAAqC,MAAA,MAAM,EAAEd,MAA7C;AAAA,gBACEL,OAAO,CAACwB,KAAR,CAAcC,GAAd,CAAkB;AAAA,YAAC;AAAEC,UAAAA,KAAF;AAASvB,UAAAA;AAAT,SAAD;AAAA,4BAClB,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,IAAd;AAAA,oBACEA,IAAI,gBACJ;AAAG,YAAA,MAAM,EAAC,QAAV;AAAmB,YAAA,IAAI,EAAEA,IAAzB;AAAA,sBACEuB;AADF;AAAA;AAAA;AAAA;AAAA,kBADI,GAKJA;AANF;AAAA;AAAA;AAAA;AAAA,gBADkB;AAAA,OAAlB;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6BA,CAhED","sourcesContent":["import { ButtonTemplate, ButtonWrapper, DropdownLeaf, Icon } from \"./styles\";\n\nimport { Paragraph } from \"../Text\";\nimport React from \"react\";\n\nexport default ({\n\tcenter,\n\tdropdown,\n\toptions,\n\texternal,\n\tchildren,\n\thref,\n\t...props\n}) => {\n\tconst [active, setActive] = React.useState(false);\n\n\tconst ref = React.useRef(Math.floor(Math.random() * 99999));\n\n\tconst deactivate = function (event) {\n\t\tconsole.log(\"EVENT\", event);\n\n\t\tconst { target } = event;\n\n\t\tconsole.log([target.dataset.ref, ref.current]);\n\n\t\tif (target.dataset.ref != ref.current) {\n\t\t\tsetActive(false);\n\t\t\twindow.removeEventListener(\"pointerDown\", this);\n\t\t}\n\t};\n\n\tconst handleClick = async () => {\n\t\tif (active) {\n\t\t\tsetActive(false);\n\t\t} else {\n\t\t\twindow.addEventListener(\"pointerDown\", deactivate);\n\t\t\tsetActive(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<ButtonWrapper center={center}>\n\t\t\t<a target=\"_blank\" href={href}>\n\t\t\t\t<ButtonTemplate\n\t\t\t\t\tdata-ref={ref.current}\n\t\t\t\t\t{...props}\n\t\t\t\t\tonPointerDown={handleClick}\n\t\t\t\t>\n\t\t\t\t\t{external && <Icon.External />}\n\t\t\t\t\t{children} {dropdown && <Icon.Chevron />}\n\t\t\t\t</ButtonTemplate>\n\t\t\t</a>\n\t\t\t{dropdown && (\n\t\t\t\t<DropdownLeaf data-ref={ref.current} active={active}>\n\t\t\t\t\t{options.items.map(({ value, href }) => (\n\t\t\t\t\t\t<Paragraph as=\"li\">\n\t\t\t\t\t\t\t{href ? (\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href={href}>\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Paragraph>\n\t\t\t\t\t))}\n\t\t\t\t</DropdownLeaf>\n\t\t\t)}\n\t\t</ButtonWrapper>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}